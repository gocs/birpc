// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mouse.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pos struct {
	PosX                 int64    `protobuf:"varint,1,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY                 int64    `protobuf:"varint,2,opt,name=posY,proto3" json:"posY,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pos) Reset()         { *m = Pos{} }
func (m *Pos) String() string { return proto.CompactTextString(m) }
func (*Pos) ProtoMessage()    {}
func (*Pos) Descriptor() ([]byte, []int) {
	return fileDescriptor_da85dd2c066184aa, []int{0}
}

func (m *Pos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pos.Unmarshal(m, b)
}
func (m *Pos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pos.Marshal(b, m, deterministic)
}
func (m *Pos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pos.Merge(m, src)
}
func (m *Pos) XXX_Size() int {
	return xxx_messageInfo_Pos.Size(m)
}
func (m *Pos) XXX_DiscardUnknown() {
	xxx_messageInfo_Pos.DiscardUnknown(m)
}

var xxx_messageInfo_Pos proto.InternalMessageInfo

func (m *Pos) GetPosX() int64 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *Pos) GetPosY() int64 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func init() {
	proto.RegisterType((*Pos)(nil), "protobuf.Pos")
}

func init() { proto.RegisterFile("mouse.proto", fileDescriptor_da85dd2c066184aa) }

var fileDescriptor_da85dd2c066184aa = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcd, 0x2f, 0x2d,
	0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0xba,
	0x5c, 0xcc, 0x01, 0xf9, 0xc5, 0x42, 0x42, 0x5c, 0x2c, 0x05, 0xf9, 0xc5, 0x11, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0xcc, 0x41, 0x60, 0x36, 0x54, 0x2c, 0x52, 0x82, 0x09, 0x2e, 0x16, 0x69, 0x64, 0xc7,
	0xc5, 0xe3, 0x0b, 0x32, 0x27, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x48, 0x8f, 0x8b, 0x03,
	0xcc, 0x07, 0x99, 0xc1, 0xab, 0x07, 0x33, 0x55, 0x2f, 0x20, 0xbf, 0x58, 0x0a, 0x95, 0xab, 0xc4,
	0xa0, 0xc1, 0x68, 0xc0, 0x98, 0xc4, 0x06, 0x16, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x47, 0x6c, 0xd7, 0x8e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MouseServiceClient is the client API for MouseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MouseServiceClient interface {
	MousePos(ctx context.Context, opts ...grpc.CallOption) (MouseService_MousePosClient, error)
}

type mouseServiceClient struct {
	cc *grpc.ClientConn
}

func NewMouseServiceClient(cc *grpc.ClientConn) MouseServiceClient {
	return &mouseServiceClient{cc}
}

func (c *mouseServiceClient) MousePos(ctx context.Context, opts ...grpc.CallOption) (MouseService_MousePosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MouseService_serviceDesc.Streams[0], "/protobuf.MouseService/MousePos", opts...)
	if err != nil {
		return nil, err
	}
	x := &mouseServiceMousePosClient{stream}
	return x, nil
}

type MouseService_MousePosClient interface {
	Send(*Pos) error
	Recv() (*Pos, error)
	grpc.ClientStream
}

type mouseServiceMousePosClient struct {
	grpc.ClientStream
}

func (x *mouseServiceMousePosClient) Send(m *Pos) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mouseServiceMousePosClient) Recv() (*Pos, error) {
	m := new(Pos)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MouseServiceServer is the server API for MouseService service.
type MouseServiceServer interface {
	MousePos(MouseService_MousePosServer) error
}

// UnimplementedMouseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMouseServiceServer struct {
}

func (*UnimplementedMouseServiceServer) MousePos(srv MouseService_MousePosServer) error {
	return status.Errorf(codes.Unimplemented, "method MousePos not implemented")
}

func RegisterMouseServiceServer(s *grpc.Server, srv MouseServiceServer) {
	s.RegisterService(&_MouseService_serviceDesc, srv)
}

func _MouseService_MousePos_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MouseServiceServer).MousePos(&mouseServiceMousePosServer{stream})
}

type MouseService_MousePosServer interface {
	Send(*Pos) error
	Recv() (*Pos, error)
	grpc.ServerStream
}

type mouseServiceMousePosServer struct {
	grpc.ServerStream
}

func (x *mouseServiceMousePosServer) Send(m *Pos) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mouseServiceMousePosServer) Recv() (*Pos, error) {
	m := new(Pos)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MouseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.MouseService",
	HandlerType: (*MouseServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MousePos",
			Handler:       _MouseService_MousePos_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "mouse.proto",
}
